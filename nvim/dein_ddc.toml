[[plugins]]
repo = 'Shougo/ddc.vim'
depends = ['context_filetype.vim']
on_event = 'InsertEnter'
hook_source = '''
  source ~/dotfiles/nvim/plugins/ddc.rc.vim
'''

[[plugins]]
repo = 'Shougo/context_filetype.vim'
on_event = 'BufRead'

[[plugins]]
repo = 'Shougo/neco-vim'
on_source = 'ddc.vim'

[[plugins]]
repo = 'Shougo/ddc-around'
on_source = 'ddc.vim'

[[plugins]]
repo = 'Shougo/ddc-zsh'
on_source = 'ddc.vim'

[[plugins]]
repo = 'Shougo/ddc-matcher_head'
on_source = 'ddc.vim'

[[plugins]]
repo = 'Shougo/ddc-converter_remove_overlap'
on_source = 'ddc.vim'

[[plugins]]
repo = 'Shougo/ddc-sorter_rank'
on_source = 'ddc.vim'

[[plugins]]
repo = 'matsui54/ddc-dictionary'
on_source = 'ddc.vim'

[[plugins]]
repo = 'matsui54/ddc-matcher_fuzzy'
on_source = 'ddc.vim'

[[plugins]]
repo = 'Shougo/ddc-nvim-lsp'
if = "has('nvim')"
on_source = 'ddc.vim'

[[plugins]]
repo = 'matsui54/ddc-buffer'
on_source = 'ddc.vim'

[[plugins]]
repo = 'matsui54/ddc-ultisnips'
on_source = 'ddc.vim'

[[plugins]]
repo = 'matsui54/ddc-filter_editdistance'
on_source = 'ddc.vim'

[[plugins]]
repo = 'matsui54/ddc-converter_truncate'
on_source = 'ddc.vim'

[[plugins]]
repo = 'matsui54/ddc-nvim-lsp-doc'
if = "has('nvim')"
on_source = 'ddc.vim'
hook_source = '''
  let g:ddc_nvim_lsp_doc_config = {
        \ 'documentation': {
        \   'border': 'rounded',
        \   'maxWidth': 100,
        \ },
        \ 'signature': {
        \   'border': 'rounded',
        \ },
        \ }
  call ddc_nvim_lsp_doc#enable()
'''

[[plugins]]
repo = 'ray-x/lsp_signature.nvim'
if = "has('nvim')"
hook_add = '''
  command! LspSigEnable call ddc_nvim_lsp_doc#disable() | lua require("lsp_signature").setup()
'''

[[plugins]]
repo = 'shun/ddc-vim-lsp'
on_source = 'ddc.vim'
if = "!has('nvim')"

[[plugins]]
repo = 'LumaKernel/ddc-file'
on_source = 'ddc.vim'
