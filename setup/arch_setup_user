#!/usr/bin/env bash

set -eu

# from https://zenn.dev/takakiriy/articles/e65780261dd5e3
while [[ $# -gt 0 ]]; do
    case $1 in
        --wsl)  WSL=true; shift;;
        --desktop)  DESKTOP=true; shift;;
        --pandoc)  PANDOC=true; shift;;
        --tex)  TEX=true; shift;;
        *) echo "[ERROR] Unknown option $1"; exit 1;;
    esac
done

install_paru ()
{
  if [[ ! -x $(which paru) ]]; then
    if [[ ! -d $HOME/.local ]]; then
      mkdir $HOME/.local
    fi
    sudo pacman -S --needed base-devel git
    git clone https://aur.archlinux.org/paru.git $HOME/.local/paru
    pushd $HOME/.local/paru
      makepkg -si
    popd
  fi
}

install_packages ()
{
  PACKAGES=(zsh zsh-syntax-highlighting git-prompt.zsh \
    ripgrep bat fzf fd github-cli bottom htop dust duf rsync \
    nodejs npm go zip deno zig rust julia \
    wget ghq man-db unzip openssh pyenv \
    words skk-jisyo \
    base-devel cmake unzip ninja curl )

  if [[ -v DESKTOP ]]; then
    PACKAGES+=(plasma-meta dolphin ark sddm i3-wm zathura alacritty \
      ttf-hackgen noto-fonts-cjk noto-fonts-emoji \
      xclip fcitx5-mozc krdc freerdp kdeconnect rofi xremap-x11-bin \
      zathura-pdf feh thunderbird libinput ruby \
    )
  fi

  if [[ -v PANDOC ]]; then
    PACKAGES+=(poppler pandoc-cli pandoc-crossref)
  fi

  if [[ -v TEX ]]; then
    PACKAGES+=(texlive-langjapanese texlive-most biber)
  fi

  paru -S --needed ${PACKAGES[*]}
}

install_dotfiles ()
{
  if [[ ! -d $HOME/dotfiles ]]; then
    git clone https://github.com/matsui54/dotfiles.git ~/dotfiles
  fi
  Dotdir=$HOME/dotfiles $HOME/dotfiles/setup/install_dot
  pushd $HOME/dotfiles
    git remote set-url origin git@github.com:matsui54/dotfiles.git
  popd
}

install_wsl ()
{
  if [[ -v WSL ]]; then
    Dotdir=$HOME/dotfiles $HOME/dotfiles/setup/link_windows_exe
    LocalBin=$HOME/.local/bin
    [ -e $LocalBin/xdg-open ] || ln -sv $HOME/dotfiles/scripts/xdg-open $LocalBin/xdg-open

    set +e
    rg -q "appendWindowsPath = false" /etc/wsl.conf
    if [[ $? -ne 0 ]]; then
      set -e
      echo "Overwrite /etc/wsl.conf"
    cat << EOF | sudo tee /etc/wsl.conf > /dev/null
[interop]
appendWindowsPath = false
EOF
    else
      set -e
    fi
  fi
}

chsh_to_zsh ()
{
  if [[ -x "/usr/bin/zsh" && $SHELL != "/usr/bin/zsh" ]]; then
    echo "change shell to zsh"
    chsh -s /usr/bin/zsh
  fi
}

setup_gh ()
{
  echo "check gh auth status"
  set +e
  gh auth status
  if [[ $? -ne 0 ]]; then
    set -e
    if [[ ! -f ~/.ssh/id_ed25519 ]]; then
      ssh-keygen -t ed25519 -C "haru.matu9168@gmail.com"
      eval "$(ssh-agent -s)"
      ssh-add ~/.ssh/id_ed25519
    fi
    gh auth login
  else
    set -e
  fi
}

install_pyenv ()
{
  if [[ $(pyenv version-name) == "system" ]]; then
    paru -S --needed base-devel openssl zlib xz tk
    set +e
    pyenv install 3 && pyenv global $(pyenv latest 3)
    set -e
  fi
}

install_nvim ()
{
  if [[ ! -x $(which nvim) && ! -d "$(ghq root)/github.com/neovim/neovim" ]]; then
    ghq get neovim/neovim
    if [[ ! -d $HOME/.local/bin ]]; then
      mkdir "$HOME/.local/bin"
    fi
    pushd "$(ghq root)/github.com/neovim/neovim"
      make CMAKE_BUILD_TYPE=Release CMAKE_INSTALL_PREFIX=$HOME/.local/nvim install
      ln -s $HOME/.local/nvim/bin/nvim $HOME/.local/bin/nvim
    popd
  fi
}

install_biz_font ()
{
  curl https://fonts.google.com/download?family=BIZ%20UDPGothic -o /tmp/BIZ_UDPGothic.zip
  curl https://fonts.google.com/download?family=BIZ%20UDPMincho -o /tmp/BIZ_UDPMincho.zip
  unzip /tmp/BIZ_UDPGothic.zip -d $HOME/.local/share/fonts *.ttf
  unzip /tmp/BIZ_UDPMincho.zip -d $HOME/.local/share/fonts *.ttf
}

install_paru
install_packages
install_dotfiles
install_wsl
chsh_to_zsh
setup_gh
install_pyenv
install_nvim
install_biz_font
echo "done"
